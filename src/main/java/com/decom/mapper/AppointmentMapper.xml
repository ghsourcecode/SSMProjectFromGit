<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.decom.dao.AppointmentDao">
  <resultMap id="BaseResultMap" type="com.decom.entity.Appointment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <idArg column="book_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <idArg column="student_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="appoint_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    book_id, student_id, appoint_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.decom.entity.AppointmentKey" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from appointment
    where book_id = #{bookId,jdbcType=BIGINT}
      and student_id = #{studentId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.decom.entity.AppointmentKey">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from appointment
    where book_id = #{bookId,jdbcType=BIGINT}
      and student_id = #{studentId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.decom.entity.Appointment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into appointment (book_id, student_id, appoint_time
      )
    values (#{bookId,jdbcType=BIGINT}, #{studentId,jdbcType=BIGINT}, #{appointTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.decom.entity.Appointment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into appointment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        book_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="appointTime != null">
        appoint_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        #{bookId,jdbcType=BIGINT},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="appointTime != null">
        #{appointTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.decom.entity.Appointment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update appointment
    <set>
      <if test="appointTime != null">
        appoint_time = #{appointTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=BIGINT}
      and student_id = #{studentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.decom.entity.Appointment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update appointment
    set appoint_time = #{appointTime,jdbcType=TIMESTAMP}
    where book_id = #{bookId,jdbcType=BIGINT}
      and student_id = #{studentId,jdbcType=BIGINT}
  </update>

  <insert id="insertAppointment" parameterType="Appointment">
      INSERT INTO appointment(book_id, student_id)
      VALUES(#{bookId}, #{studentId})
  </insert>
<!--将查询结果中部分字段作为一个对象的属性-->
  <select id="queryByKeyWithBook" resultType="Appointment">
    SELECT
          initialInvest.book_id,
          initialInvest.student_id,
          initialInvest.appoint_time,
          b.book_id "bookTable.book_id",
		  b.name "bookTable.name",
		  b.number "bookTable.number"
    FROM
          appointment initialInvest
    inner JOIN book b on initialInvest.book_id=b.book_id
    where
          initialInvest.book_id = #{bookId}
    and
          initialInvest.student_id = #{studentId}
  </select>
</mapper>